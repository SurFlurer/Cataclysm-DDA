name: "Experimental Release"
on:
  push:
    branches:
      - ad1
    paths:
      - '.github/workflows/release.yml'
      - 'android/**'
      - 'build-data/**'
      - 'cataclysm-launcher'
      - 'data/**'
      - 'doc/**'
      - 'gfx/**'
      - 'lang/po/*.po'
      - 'LICENSE*'
      - 'Makefile'
      - 'README*'
      - 'src/**'

concurrency:
  group: cataclysm-build
  cancel-in-progress: true
jobs:
  builds:
    runs-on: ubuntu-latest
    env:
        ZSTD_CLEVEL: 17
    steps:
      - uses: actions/checkout@v3
      - name: Get build timestamp
        id: get-timestamp
        uses: nanzm/get-time-action@v1.1
        with:
          timeZone: 0
          format: 'YYYY-MM-DD-HHmm'
      - name: Generate environmental variables
        id: generate_env_vars
        run: |
          echo "tag_name=cdda-experimental-${{ steps.get-timestamp.outputs.time }}" >> $GITHUB_OUTPUT
          echo "release_name=Cataclysm-DDA experimental build ${{ steps.get-timestamp.outputs.time }}" >> $GITHUB_OUTPUT
      - name: Set up JDK 8 (android)
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: gradle
      - name: Setup Build and Dependencies (android)
        run: |
          sudo apt-get update
          sudo apt-get install gettext    
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.gradle/caches
          key: gradlecache-${{ steps.generate_env_vars.outputs.tag_name }}
          restore-keys: |
            gradlecache
      - name: Build CDDA (android)
        working-directory: ./android
        run: | 
          chmod +x gradlew
          ./gradlew -Pj=$((`nproc`+0)) -Pabi_arm_32=false assembleExperimentalRelease --build-cache
          #mkdir ./app/build/
          #mkdir ./app/build/outputs
          #mkdir ./app/build/outputs/apk
          #mkdir ./app/build/outputs/apk/experimental
          #mkdir ./app/build/outputs/apk/experimental/release
          #echo "shire" > "./app/build/outputs/apk/experimental/release/test.apk"
          mv ./app/build/outputs/apk/experimental/release/*.apk "/home/runner/work/Cataclysm-DDA/${{ steps.generate_env_vars.outputs.release_name }}.apk"
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.generate_env_vars.outputs.tag_name }}
          release_name: ${{ steps.generate_env_vars.outputs.release_name }}
          draft: false
      - name: Upload Release APK
        id: upload_release_asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "/home/runner/work/Cataclysm-DDA/${{ steps.generate_env_vars.outputs.release_name }}.apk"
          asset_name: ${{ steps.generate_env_vars.outputs.release_name }}.apk
          asset_content_type: application/zip
